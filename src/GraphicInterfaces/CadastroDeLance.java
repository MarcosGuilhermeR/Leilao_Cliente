/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package GraphicInterfaces;

import Leilao.Cliente;
import Leilao.InterfaceServ;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;


/**
 *
 * @author Stephany
 */
public class CadastroDeLance extends javax.swing.JFrame {

    public long codigoProduct;
    
    
    /**
     * Creates new form IntDarLance
     * @param codProduct
     * @param product
     * @param description
     * @param currentBidS
     */
    public CadastroDeLance(long codProduct, String product, double currentBidS, String sellerName) {
        
        
        initComponents();
        
        this.codigoProduct = codProduct;
        
        productName.setText(product);
        mynameis.setText(Cliente.mynameis);
        String lanceAtualtoString = String.valueOf(currentBidS);
        lanceAtual.setText(lanceAtualtoString);
                
        // # Caso o produto seja desta pessoa que esteja visualizando, concede a opção de cancelar leilão
        if(Cliente.mynameis.trim().toLowerCase().equals(sellerName.trim().toLowerCase()))
        {
            newbid.hide();
            jLabel4.hide();
            submeterLance.setText("Desativar");
        }
        
        
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                dispose();
            }
        });
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        newbid = new javax.swing.JTextField();
        submeterLance = new javax.swing.JToggleButton();
        productName = new javax.swing.JLabel();
        productDescription = new javax.swing.JLabel();
        currentBid = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        mynameis = new javax.swing.JLabel();
        productName1 = new javax.swing.JLabel();
        lanceAtual = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Participar Leilão - Lance");
        setBackground(java.awt.SystemColor.activeCaptionBorder);

        jLabel1.setText("Produto:");

        jLabel3.setText("Lance Atual:");

        jLabel4.setText("Novo Lance:");

        submeterLance.setText("Submeter Lance");
        submeterLance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submeterLanceActionPerformed(evt);
            }
        });

        jLabel5.setText("Interessado:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(43, 43, 43)
                        .addComponent(newbid, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(42, 42, 42)
                        .addComponent(mynameis, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(submeterLance)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(productName, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(productDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(productName1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lanceAtual, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(productName, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(productDescription))
                    .addComponent(productName1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lanceAtual, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel4))
                    .addComponent(newbid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(mynameis))
                .addGap(46, 46, 46)
                .addComponent(submeterLance)
                .addContainerGap(67, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void submeterLanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submeterLanceActionPerformed
    
        String flag = submeterLance.getText().trim().toLowerCase();
        
        if("desativar".equals(flag)) // dono do produto escolheu desativar
        {
            try {
                // Comunicação RMI
                InterfaceServ startRMIChannel = Cliente.startRMIChannel();

                if(startRMIChannel != null)
                {
                    boolean encerrarLeilao = startRMIChannel.encerrarLeilao(this.codigoProduct);
                    if(encerrarLeilao)
                    {
                        dispose();
                    }else
                    {
                        JOptionPane.showMessageDialog(new JFrame(), "Leilão não foi cancelado. ", "Cancelamento Leilão", JOptionPane.INFORMATION_MESSAGE);
                    }
                    
                }else
                {  
                    System.out.println("Não foi possível abrir canal de comunicação");
                }
            
            } catch (RemoteException | NotBoundException ex) {
                Logger.getLogger(CadastroDeProduto.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
        }else  // Dar lance no produto
        {
            
            // TODO add your handling code here:
            double curBid = Double.parseDouble(lanceAtual.getText().replace(",","."));
            double newBid = Double.parseDouble(newbid.getText().replace(",","."));
        
            if(newBid == 0 || newBid <= curBid)
            {   
                JOptionPane.showMessageDialog(new JFrame(), "Novo lance deve ser maior que o lance anterior e diferente de zero.", "Resposta Lance", JOptionPane.ERROR_MESSAGE);
            }else
            {
                try {
                    // Comunicação RMI
                    InterfaceServ startRMIChannel = Cliente.startRMIChannel();
            
                    if(startRMIChannel != null)
                    {
                        boolean darLance = startRMIChannel.darLance(this.codigoProduct, newBid, Cliente.mynameis);
                        if(darLance)
                        {
                            // Atualiza o valor do lance atual
                            String bd = String.valueOf(newBid);
                            lanceAtual.setText(bd);
                        }
                    }else
                    {
                        System.out.println("Não foi possível abrir canal de comunicação");
                    }
            
                } catch (RemoteException | NotBoundException ex) {
                    Logger.getLogger(CadastroDeProduto.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_submeterLanceActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel currentBid;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lanceAtual;
    private javax.swing.JLabel mynameis;
    private javax.swing.JTextField newbid;
    private javax.swing.JLabel productDescription;
    private javax.swing.JLabel productName;
    private javax.swing.JLabel productName1;
    private javax.swing.JToggleButton submeterLance;
    // End of variables declaration//GEN-END:variables
}
